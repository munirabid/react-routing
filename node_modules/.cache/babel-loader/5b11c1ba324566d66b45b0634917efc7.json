{"ast":null,"code":"import _slicedToArray from\"C:/Muneer/React/react-routing-practice/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect,useCallback}from\"react\";import useHttp from\"../../hooks/use-http\";import{getAllComments}from\"../../lib/api\";import classes from\"./Comments.module.css\";import NewCommentForm from\"./NewCommentForm\";import LoadingSpinner from\"../UI/LoadingSpinner\";import{useParams}from\"react-router-dom\";import CommentsList from\"./CommentsList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Comments=function Comments(){var _useHttp=useHttp(getAllComments),sendRequest=_useHttp.sendRequest,status=_useHttp.status,loadedComments=_useHttp.data,error=_useHttp.error;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAddingComment=_useState2[0],setIsAddingComment=_useState2[1];var params=useParams();var id=params.id;useEffect(function(){sendRequest(id);},[sendRequest,id]);var startAddCommentHandler=function startAddCommentHandler(){setIsAddingComment(true);};var addedCommentHandler=useCallback(function(){sendRequest(id);},[sendRequest,id]);var comments;if(status===\"pending\"){comments=/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}if(status===\"completed\"&&loadedComments&&loadedComments.length>0){comments=/*#__PURE__*/_jsx(CommentsList,{comments:loadedComments});}if(status===\"completed\"&&(!loadedComments||loadedComments.length===0)){comments=/*#__PURE__*/_jsx(\"p\",{className:\"centered\",children:\"No comments added yet!\"});}return/*#__PURE__*/_jsxs(\"section\",{className:classes.comments,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Comments\"}),!isAddingComment&&/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:startAddCommentHandler,children:\"Add a Comment\"}),isAddingComment&&/*#__PURE__*/_jsx(NewCommentForm,{quoteId:id,onAddComment:addedCommentHandler}),comments]});};export default Comments;","map":{"version":3,"sources":["C:/Muneer/React/react-routing-practice/src/components/comments/Comments.js"],"names":["useState","useEffect","useCallback","useHttp","getAllComments","classes","NewCommentForm","LoadingSpinner","useParams","CommentsList","Comments","sendRequest","status","loadedComments","data","error","isAddingComment","setIsAddingComment","params","id","startAddCommentHandler","addedCommentHandler","comments","length"],"mappings":"4HAAA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,WAA9B,KAAiD,OAAjD,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,aAKIP,OAAO,CAACC,cAAD,CALX,CACEO,WADF,UACEA,WADF,CAEEC,MAFF,UAEEA,MAFF,CAGQC,cAHR,UAGEC,IAHF,CAIEC,KAJF,UAIEA,KAJF,CAMA,cAA8Cf,QAAQ,CAAC,KAAD,CAAtD,wCAAOgB,eAAP,eAAwBC,kBAAxB,eACA,GAAMC,CAAAA,MAAM,CAAGV,SAAS,EAAxB,CACA,GAAQW,CAAAA,EAAR,CAAeD,MAAf,CAAQC,EAAR,CAEAlB,SAAS,CAAC,UAAM,CACdU,WAAW,CAACQ,EAAD,CAAX,CACD,CAFQ,CAEN,CAACR,WAAD,CAAcQ,EAAd,CAFM,CAAT,CAIA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnCH,kBAAkB,CAAC,IAAD,CAAlB,CACD,CAFD,CAIA,GAAMI,CAAAA,mBAAmB,CAAGnB,WAAW,CAAC,UAAM,CAC5CS,WAAW,CAACQ,EAAD,CAAX,CACD,CAFsC,CAEpC,CAACR,WAAD,CAAcQ,EAAd,CAFoC,CAAvC,CAIA,GAAIG,CAAAA,QAAJ,CAEA,GAAIV,MAAM,GAAK,SAAf,CAA0B,CACxBU,QAAQ,cACN,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,cAAD,IADF,EADF,CAKD,CAED,GAAIV,MAAM,GAAK,WAAX,EAA0BC,cAA1B,EAA4CA,cAAc,CAACU,MAAf,CAAwB,CAAxE,CAA2E,CACzED,QAAQ,cAAG,KAAC,YAAD,EAAc,QAAQ,CAAET,cAAxB,EAAX,CACD,CAED,GACED,MAAM,GAAK,WAAX,GACC,CAACC,cAAD,EAAmBA,cAAc,CAACU,MAAf,GAA0B,CAD9C,CADF,CAGE,CACAD,QAAQ,cAAG,UAAG,SAAS,CAAC,UAAb,oCAAX,CACD,CAED,mBACE,iBAAS,SAAS,CAAEjB,OAAO,CAACiB,QAA5B,wBACE,qCADF,CAEG,CAACN,eAAD,eACC,eAAQ,SAAS,CAAC,KAAlB,CAAwB,OAAO,CAAEI,sBAAjC,2BAHJ,CAOGJ,eAAe,eACd,KAAC,cAAD,EAAgB,OAAO,CAAEG,EAAzB,CAA6B,YAAY,CAAEE,mBAA3C,EARJ,CAUGC,QAVH,GADF,CAcD,CA1DD,CA4DA,cAAeZ,CAAAA,QAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport { useParams } from \"react-router-dom\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error,\n  } = useHttp(getAllComments);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { id } = params;\n\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm quoteId={id} onAddComment={addedCommentHandler} />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}