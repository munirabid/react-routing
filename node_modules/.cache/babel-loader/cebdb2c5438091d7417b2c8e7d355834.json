{"ast":null,"code":"import{useEffect}from\"react\";import{useParams,Route,useRouteMatch,Link}from\"react-router-dom\";import Comments from\"./../components/comments/Comments\";import HighlightedQuote from\"./../components/quotes/HighlightedQuote\";import{getSingleQuote}from\"../lib/api\";import useHttp from\"./../hooks/use-http\";import LoadingSpinner from\"../components/UI/LoadingSpinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuoteDetail=function QuoteDetail(){var _useHttp=useHttp(getSingleQuote,true),sendRequest=_useHttp.sendRequest,status=_useHttp.status,data=_useHttp.data,error=_useHttp.error;var params=useParams();var match=useRouteMatch();var id=params.id;useEffect(function(){sendRequest(id);},[sendRequest,id]);if(status===\"pending\"){return/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})});}if(!data.text){return/*#__PURE__*/_jsx(\"p\",{children:\"No data found\"});}if(error){return/*#__PURE__*/_jsx(\"p\",{className:\"centered focused\",children:error});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(HighlightedQuote,{text:data.text,author:data.author}),/*#__PURE__*/_jsx(Route,{path:match.path,exact:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(Link,{className:\"btn--flat\",to:\"\".concat(match.url,\"/comments\"),children:\"Load Comments\"})})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(match.path,\"/comments\"),children:/*#__PURE__*/_jsx(Comments,{})})]});};export default QuoteDetail;","map":{"version":3,"sources":["C:/Muneer/React/react-routing-practice/src/pages/QuoteDetail.js"],"names":["useEffect","useParams","Route","useRouteMatch","Link","Comments","HighlightedQuote","getSingleQuote","useHttp","LoadingSpinner","QuoteDetail","sendRequest","status","data","error","params","match","id","text","author","path","url"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,SAAT,CAAoBC,KAApB,CAA2BC,aAA3B,CAA0CC,IAA1C,KAAsD,kBAAtD,CAEA,MAAOC,CAAAA,QAAP,KAAqB,mCAArB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yCAA7B,CACA,OAASC,cAAT,KAA+B,YAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,aAA6CF,OAAO,CAACD,cAAD,CAAiB,IAAjB,CAApD,CAAQI,WAAR,UAAQA,WAAR,CAAqBC,MAArB,UAAqBA,MAArB,CAA6BC,IAA7B,UAA6BA,IAA7B,CAAmCC,KAAnC,UAAmCA,KAAnC,CAEA,GAAMC,CAAAA,MAAM,CAAGd,SAAS,EAAxB,CACA,GAAMe,CAAAA,KAAK,CAAGb,aAAa,EAA3B,CAEA,GAAQc,CAAAA,EAAR,CAAeF,MAAf,CAAQE,EAAR,CAEAjB,SAAS,CAAC,UAAM,CACdW,WAAW,CAACM,EAAD,CAAX,CACD,CAFQ,CAEN,CAACN,WAAD,CAAcM,EAAd,CAFM,CAAT,CAIA,GAAIL,MAAM,GAAK,SAAf,CAA0B,CACxB,mBACE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,cAAD,IADF,EADF,CAKD,CACD,GAAI,CAACC,IAAI,CAACK,IAAV,CAAgB,CACd,mBAAO,oCAAP,CACD,CACD,GAAIJ,KAAJ,CAAW,CACT,mBAAO,UAAG,SAAS,CAAC,kBAAb,UAAiCA,KAAjC,EAAP,CACD,CAED,mBACE,oCACE,KAAC,gBAAD,EAAkB,IAAI,CAAED,IAAI,CAACK,IAA7B,CAAmC,MAAM,CAAEL,IAAI,CAACM,MAAhD,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAEH,KAAK,CAACI,IAAnB,CAAyB,KAAK,KAA9B,uBACE,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,CAA4B,EAAE,WAAKJ,KAAK,CAACK,GAAX,aAA9B,2BADF,EADF,EAFF,cASE,KAAC,KAAD,EAAO,IAAI,WAAKL,KAAK,CAACI,IAAX,aAAX,uBACE,KAAC,QAAD,IADF,EATF,GADF,CAeD,CAzCD,CA2CA,cAAeV,CAAAA,WAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useParams, Route, useRouteMatch, Link } from \"react-router-dom\";\r\n\r\nimport Comments from \"./../components/comments/Comments\";\r\nimport HighlightedQuote from \"./../components/quotes/HighlightedQuote\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport useHttp from \"./../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n  const { sendRequest, status, data, error } = useHttp(getSingleQuote, true);\r\n\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const { id } = params;\r\n\r\n  useEffect(() => {\r\n    sendRequest(id);\r\n  }, [sendRequest, id]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (!data.text) {\r\n    return <p>No data found</p>;\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={data.text} author={data.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}