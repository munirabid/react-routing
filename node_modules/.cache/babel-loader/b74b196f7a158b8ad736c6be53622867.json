{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\react-routing-practice\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useParams, Route, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"./../components/comments/Comments\";\nimport HighlightedQuote from \"./../components/quotes/HighlightedQuote\";\nimport { getSingleQuote } from \"../lib/api\";\nimport useHttp from \"./../hooks/use-http\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning react is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Muneer\",\n  text: \"Learning react is great!\"\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data,\n    error\n  } = useHttp(getSingleQuote, true);\n  const params = useParams();\n  const match = useRouteMatch();\n  const quote = DUMMY_DATA.find(quote => quote.id === params.id);\n  useEffect(() => {\n    sendRequest(params.id);\n  }, [sendRequest]);\n  console.log(data);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"C0ex9lqWBa6sSsndgOYMzwMEYHE=\", false, function () {\n  return [useHttp, useParams, useRouteMatch];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Muneer/React/react-routing-practice/src/pages/QuoteDetail.js"],"names":["Link","useParams","Route","useRouteMatch","Comments","HighlightedQuote","getSingleQuote","useHttp","useEffect","DUMMY_DATA","id","author","text","QuoteDetail","sendRequest","status","data","error","params","match","quote","find","console","log","path","url"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,aAA3B,QAAgD,kBAAhD;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADiB,EAEjB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,QAApB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAFiB,CAAnB;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA;AAA7B,MAAuCV,OAAO,CAACD,cAAD,EAAiB,IAAjB,CAApD;AAEA,QAAMY,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAMkB,KAAK,GAAGhB,aAAa,EAA3B;AACA,QAAMiB,KAAK,GAAGX,UAAU,CAACY,IAAX,CAAiBD,KAAD,IAAWA,KAAK,CAACV,EAAN,KAAaQ,MAAM,CAACR,EAA/C,CAAd;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW,CAACI,MAAM,CAACR,EAAR,CAAX;AACD,GAFQ,EAEN,CAACI,WAAD,CAFM,CAAT;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AAEA,MAAI,CAACI,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACR,IAA9B;AAAoC,MAAA,MAAM,EAAEQ,KAAK,CAACT;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEQ,KAAK,CAACK,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEL,KAAK,CAACM,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEN,KAAK,CAACK,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAhCD;;GAAMX,W;UACyCN,O,EAE9BN,S,EACDE,a;;;KAJVU,W;AAkCN,eAAeA,WAAf","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useParams, Route, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"./../components/comments/Comments\";\r\nimport HighlightedQuote from \"./../components/quotes/HighlightedQuote\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport useHttp from \"./../hooks/use-http\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst DUMMY_DATA = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning react is fun!\" },\r\n  { id: \"q2\", author: \"Muneer\", text: \"Learning react is great!\" },\r\n];\r\nconst QuoteDetail = () => {\r\n  const { sendRequest, status, data, error } = useHttp(getSingleQuote, true);\r\n\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  const quote = DUMMY_DATA.find((quote) => quote.id === params.id);\r\n\r\n  useEffect(() => {\r\n    sendRequest(params.id);\r\n  }, [sendRequest]);\r\n\r\n  console.log(data);\r\n\r\n  if (!quote) {\r\n    return <p>No data found</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments></Comments>\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}