{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\react-routing-practice\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from \"./../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_DATA = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning react is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Muneer\",\n  text: \"Learning react is great!\"\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: DUMMY_DATA\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllQuotes, \"xmzqdF0SAq1bnsS9hD1yci6YQlY=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Muneer/React/react-routing-practice/src/pages/AllQuotes.js"],"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","DUMMY_DATA","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AACA,MAAMC,UAAU,GAAG,CACjB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,KAApB;AAA2BC,EAAAA,IAAI,EAAE;AAAjC,CADiB,EAEjB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,QAApB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAFiB,CAAnB;;AAIA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,YAHF;AAIJC,IAAAA;AAJI,MAKFb,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;AAOAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAGG,KAAH,EACA,oBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAET;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMI,S;UAMAR,O;;;KANAQ,S;AA2BN,eAAeA,SAAf","sourcesContent":["import QuoteList from \"./../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nconst DUMMY_DATA = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning react is fun!\" },\r\n  { id: \"q2\", author: \"Muneer\", text: \"Learning react is great!\" },\r\n];\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if(error)\r\n  return (\r\n    <h2>\r\n      <QuoteList quotes={DUMMY_DATA}></QuoteList>\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n"]},"metadata":{},"sourceType":"module"}