{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\react-routing-practice\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useParams, Route, useRouteMatch, Link, Routes } from \"react-router-dom\";\nimport Comments from \"./../components/comments/Comments\";\nimport HighlightedQuote from \"./../components/quotes/HighlightedQuote\";\nimport { getSingleQuote } from \"../lib/api\";\nimport useHttp from \"./../hooks/use-http\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data,\n    error\n  } = useHttp(getSingleQuote, true);\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    id\n  } = params;\n  useEffect(() => {\n    sendRequest(id);\n  }, [sendRequest, id]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!data.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: data.text,\n      author: data.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: match.path,\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"centered\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn--flat\",\n            to: `${match.url}/comments`,\n            children: \"Load Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/comments`,\n        element: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"C0ex9lqWBa6sSsndgOYMzwMEYHE=\", false, function () {\n  return [useHttp, useParams, useRouteMatch];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Muneer/React/react-routing-practice/src/pages/QuoteDetail.js"],"names":["useEffect","useParams","Route","useRouteMatch","Link","Routes","Comments","HighlightedQuote","getSingleQuote","useHttp","LoadingSpinner","QuoteDetail","sendRequest","status","data","error","params","match","id","text","author","path","url"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SACEC,SADF,EAEEC,KAFF,EAGEC,aAHF,EAIEC,IAJF,EAKEC,MALF,QAMO,kBANP;AAQA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA;AAA7B,MAAuCN,OAAO,CAACD,cAAD,EAAiB,IAAjB,CAApD;AAEA,QAAMQ,MAAM,GAAGf,SAAS,EAAxB;AACA,QAAMgB,KAAK,GAAGd,aAAa,EAA3B;AAEA,QAAM;AAAEe,IAAAA;AAAF,MAASF,MAAf;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAACM,EAAD,CAAX;AACD,GAFQ,EAEN,CAACN,WAAD,EAAcM,EAAd,CAFM,CAAT;;AAIA,MAAIL,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AACD,MAAI,CAACC,IAAI,CAACK,IAAV,EAAgB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIJ,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAED,IAAI,CAACK,IAA7B;AAAmC,MAAA,MAAM,EAAEL,IAAI,CAACM;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEH,KAAK,CAACI,IAAnB;AAAyB,QAAA,KAAK,MAA9B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,WAAhB;AAA4B,YAAA,EAAE,EAAG,GAAEJ,KAAK,CAACK,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEL,KAAK,CAACI,IAAK,WAA3B;AAAuC,QAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA3CD;;GAAMV,W;UACyCF,O,EAE9BR,S,EACDE,a;;;KAJVQ,W;AA6CN,eAAeA,WAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport {\r\n  useParams,\r\n  Route,\r\n  useRouteMatch,\r\n  Link,\r\n  Routes,\r\n} from \"react-router-dom\";\r\n\r\nimport Comments from \"./../components/comments/Comments\";\r\nimport HighlightedQuote from \"./../components/quotes/HighlightedQuote\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport useHttp from \"./../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nconst QuoteDetail = () => {\r\n  const { sendRequest, status, data, error } = useHttp(getSingleQuote, true);\r\n\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const { id } = params;\r\n\r\n  useEffect(() => {\r\n    sendRequest(id);\r\n  }, [sendRequest, id]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (!data.text) {\r\n    return <p>No data found</p>;\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={data.text} author={data.author} />\r\n      <Routes>\r\n        <Route path={match.path} exact>\r\n          <div className=\"centered\">\r\n            <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n              Load Comments\r\n            </Link>\r\n          </div>\r\n        </Route>\r\n        <Route path={`${match.path}/comments`} element={<Comments />}>\r\n          \r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}