{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/UI/Card.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isFocused","setIsFocused","when","message","onFocus","console","log","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,mBCArID,EAAOC,QAAU,CAAC,KAAO,qB,0GCKVC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,OCkE/BC,EA9DG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAsBA,OACE,gCACE,cAAC,IAAD,CACEC,KAAMF,EACNG,QAAQ,kEAEV,cAAC,EAAD,UACE,uBACEC,QAjBiB,WACvBC,QAAQC,IAAI,WACZL,GAAa,IAgBPV,UAAWC,IAAQe,KACnBC,SA9BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBf,EAAegB,QAAQC,MACvCC,EAAchB,EAAac,QAAQC,MAIzCvB,EAAMyB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAmB5C,UAKGxB,EAAM4B,WACL,qBAAK3B,UAAWC,IAAQ2B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK7B,OAEtC,sBAAKL,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK3B,OAEpC,qBAAKP,UAAWC,IAAQmC,QAAxB,SACE,wBAAQC,QA/BS,WACzB3B,GAAa,IA8BgCV,UAAU,MAA/C,kC,gBC/BGsC,UAtBE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,YAEd,CAACJ,EAAQC,IAIZ,OACE,6BACE,cAAC,EAAD,CACEhB,UAAsB,YAAXe,EACXlB,WAPkB,SAACuB,GACvBN,EAAYM","file":"static/js/3.2f2ab97c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__nHwSQ\",\"loading\":\"QuoteForm_loading__1Tcab\",\"control\":\"QuoteForm_control__QoiI7\",\"actions\":\"QuoteForm_actions__34dHq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3r1RI\"};","import classes from \"./Card.module.css\";\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\r\n\r\nimport classes from \"./QuoteForm.module.css\";\r\nimport Card from \"./../UI/Card\";\r\nimport LoadingSpinner from \"./../UI/LoadingSpinner\";\r\nimport { Prompt } from \"react-router-dom\";\r\n\r\nconst QuoteForm = (props) => {\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  const formFocusHandler = () => {\r\n    console.log(\"clicked\");\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const finishEnteringData = () => {\r\n    setIsFocused(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Prompt\r\n        when={isFocused}\r\n        message=\"Are you sure you want to leave? All you changes will be lost.\"\r\n      />\r\n      <Card>\r\n        <form\r\n          onFocus={formFocusHandler}\r\n          className={classes.form}\r\n          onSubmit={submitFormHandler}\r\n        >\r\n          {props.isLoading && (\r\n            <div className={classes.loading}>\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"author\">Author</label>\r\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"text\">Text</label>\r\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onClick={finishEnteringData} className=\"btn\">\r\n              Add Quote\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"./../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"quotes\");\r\n    }\r\n  }, [status, history]);\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n  return (\r\n    <h2>\r\n      <QuoteForm\r\n        isLoading={status === \"pending\"}\r\n        onAddQuote={addQuoteHandler}\r\n      />\r\n    </h2>\r\n  );\r\n};\r\n\r\nexport default NewQuote;\r\n"],"sourceRoot":""}