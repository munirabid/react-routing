{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\react-routing-practice\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport classes from \"./QuoteForm.module.css\";\nimport Card from \"./../UI/Card\";\nimport LoadingSpinner from \"./../UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  const isFocused = function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value; // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  };\n\n  const formFocushandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onFocus: formFocushandler,\n      className: classes.form,\n      onSubmit: submitFormHandler,\n      children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loading,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"author\",\n          ref: authorInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"text\",\n          rows: \"5\",\n          ref: textInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"q+5GnqPvlPQw7BSDcbMn6zjr2RI=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"sources":["C:/Muneer/React/react-routing-practice/src/components/quotes/QuoteForm.js"],"names":["useRef","classes","Card","LoadingSpinner","QuoteForm","props","authorInputRef","textInputRef","isFocused","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","formFocushandler","form","isLoading","loading","control","actions"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,cAAc,GAAGN,MAAM,EAA7B;AACA,QAAMO,YAAY,GAAGP,MAAM,EAA3B;;AACA,QAAMQ,SAAS,GAEf,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,aAAa,GAAGN,cAAc,CAACO,OAAf,CAAuBC,KAA7C;AACA,UAAMC,WAAW,GAAGR,YAAY,CAACM,OAAb,CAAqBC,KAAzC,CAJgC,CAMhC;;AAEAT,IAAAA,KAAK,CAACW,UAAN,CAAiB;AAAEC,MAAAA,MAAM,EAAEL,aAAV;AAAyBM,MAAAA,IAAI,EAAEH;AAA/B,KAAjB;AACD,GAXD;;AAaA,QAAMI,gBAAgB,GAAG,MAAM,CAAE,CAAjC;;AAEA,sBACE,QAAC,IAAD;AAAA,2BACE;AACE,MAAA,OAAO,EAAEA,gBADX;AAEE,MAAA,SAAS,EAAElB,OAAO,CAACmB,IAFrB;AAGE,MAAA,QAAQ,EAAEX,iBAHZ;AAAA,iBAKGJ,KAAK,CAACgB,SAAN,iBACC;AAAK,QAAA,SAAS,EAAEpB,OAAO,CAACqB,OAAxB;AAAA,+BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANJ,eAWE;AAAK,QAAA,SAAS,EAAErB,OAAO,CAACsB,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,QAAtB;AAA+B,UAAA,GAAG,EAAEjB;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAeE;AAAK,QAAA,SAAS,EAAEL,OAAO,CAACsB,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAU,UAAA,EAAE,EAAC,MAAb;AAAoB,UAAA,IAAI,EAAC,GAAzB;AAA6B,UAAA,GAAG,EAAEhB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAmBE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACuB,OAAxB;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA7CD;;GAAMpB,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import { useRef } from \"react\";\n\nimport classes from \"./QuoteForm.module.css\";\nimport Card from \"./../UI/Card\";\nimport LoadingSpinner from \"./../UI/LoadingSpinner\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const isFocused= \n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocushandler = () => {};\n\n  return (\n    <Card>\n      <form\n        onFocus={formFocushandler}\n        className={classes.form}\n        onSubmit={submitFormHandler}\n      >\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor=\"author\">Author</label>\n          <input type=\"text\" id=\"author\" ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"text\">Text</label>\n          <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className=\"btn\">Add Quote</button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default QuoteForm;\n"]},"metadata":{},"sourceType":"module"}