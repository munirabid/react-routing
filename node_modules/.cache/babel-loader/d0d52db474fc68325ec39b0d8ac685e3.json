{"ast":null,"code":"import{useRef,useEffect}from\"react\";import useHttp from\"./../../hooks/use-http\";import{addComment}from\"../../lib/api\";import LoadingSpinner from\"../UI/LoadingSpinner\";import classes from\"./NewCommentForm.module.css\";import{useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NewCommentForm=function NewCommentForm(props){var commentTextRef=useRef();// const params = useParams();\n// const { id } = params;\nvar _useHttp=useHttp(addComment),sendRequest=_useHttp.sendRequest,status=_useHttp.status,data=_useHttp.data,error=_useHttp.error;var onAddComment=props.onAddComment;useEffect(function(){if(status===\"completed\"&&!error){onAddComment();}},[status,error,onAddComment]);var submitFormHandler=function submitFormHandler(event){event.preventDefault();// optional: Could validate here\n// send comment to server\nsendRequest({commentData:{text:commentTextRef.current.value},quoteId:props.quoteId});};return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:submitFormHandler,children:[status===\"pending\"&&/*#__PURE__*/_jsx(\"div\",{className:\"centered\",children:/*#__PURE__*/_jsx(LoadingSpinner,{})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.control,onSubmit:submitFormHandler,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"comment\",children:\"Your Comment\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"comment\",rows:\"5\",ref:commentTextRef})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.actions,children:/*#__PURE__*/_jsx(\"button\",{className:\"btn\",children:\"Add Comment\"})})]});};export default NewCommentForm;","map":{"version":3,"sources":["C:/Muneer/React/react-routing-practice/src/components/comments/NewCommentForm.js"],"names":["useRef","useEffect","useHttp","addComment","LoadingSpinner","classes","useParams","NewCommentForm","props","commentTextRef","sendRequest","status","data","error","onAddComment","submitFormHandler","event","preventDefault","commentData","text","current","value","quoteId","form","control","actions"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,SAAjB,KAAkC,OAAlC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAASC,UAAT,KAA2B,eAA3B,CAEA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA,OAASC,SAAT,KAA0B,kBAA1B,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChC,GAAMC,CAAAA,cAAc,CAAGT,MAAM,EAA7B,CACA;AACA;AAEA,aAA6CE,OAAO,CAACC,UAAD,CAApD,CAAQO,WAAR,UAAQA,WAAR,CAAqBC,MAArB,UAAqBA,MAArB,CAA6BC,IAA7B,UAA6BA,IAA7B,CAAmCC,KAAnC,UAAmCA,KAAnC,CAEA,GAAQC,CAAAA,YAAR,CAAyBN,KAAzB,CAAQM,YAAR,CAEAb,SAAS,CAAC,UAAM,CACd,GAAIU,MAAM,GAAK,WAAX,EAA0B,CAACE,KAA/B,CAAsC,CACpCC,YAAY,GACb,CACF,CAJQ,CAIN,CAACH,MAAD,CAASE,KAAT,CAAgBC,YAAhB,CAJM,CAAT,CAMA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAW,CACnCA,KAAK,CAACC,cAAN,GAEA;AAEA;AAEAP,WAAW,CAAC,CACVQ,WAAW,CAAE,CAAEC,IAAI,CAAEV,cAAc,CAACW,OAAf,CAAuBC,KAA/B,CADH,CAEVC,OAAO,CAAEd,KAAK,CAACc,OAFL,CAAD,CAAX,CAID,CAXD,CAaA,mBACE,cAAM,SAAS,CAAEjB,OAAO,CAACkB,IAAzB,CAA+B,QAAQ,CAAER,iBAAzC,WACGJ,MAAM,GAAK,SAAX,eACC,YAAK,SAAS,CAAC,UAAf,uBACE,KAAC,cAAD,IADF,EAFJ,cAME,aAAK,SAAS,CAAEN,OAAO,CAACmB,OAAxB,CAAiC,QAAQ,CAAET,iBAA3C,wBACE,cAAO,OAAO,CAAC,SAAf,0BADF,cAEE,iBAAU,EAAE,CAAC,SAAb,CAAuB,IAAI,CAAC,GAA5B,CAAgC,GAAG,CAAEN,cAArC,EAFF,GANF,cAUE,YAAK,SAAS,CAAEJ,OAAO,CAACoB,OAAxB,uBACE,eAAQ,SAAS,CAAC,KAAlB,yBADF,EAVF,GADF,CAgBD,CA5CD,CA8CA,cAAelB,CAAAA,cAAf","sourcesContent":["import { useRef, useEffect } from \"react\";\n\nimport useHttp from \"./../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\n\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\nimport { useParams } from \"react-router-dom\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  // const params = useParams();\n  // const { id } = params;\n\n  const { sendRequest, status, data, error } = useHttp(addComment);\n\n  const { onAddComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddComment();\n    }\n  }, [status, error, onAddComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n\n    sendRequest({\n      commentData: { text: commentTextRef.current.value },\n      quoteId: props.quoteId,\n    });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n"]},"metadata":{},"sourceType":"module"}